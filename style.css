:root {
  --bgColor: black;
  --keyWhite: hsl(0, 0%, 30%);
  --keyBlack: hsl(0, 0%, 18%);
  --posColor: hsl(120, 73%, 75%);
  --negColor: hsl(0, 73%, 70%);
  --infoColor: hsl(0, 0%, 65%);

  background-color: var(--bgColor);
  color: hsl(0, 0%, 90%);
  font-family: system-ui, sans-serif;
}

* {
  box-sizing: border-box;
}

#chordArea {
  position: relative;
  padding: 10px;
  font-size: 40pt;
  margin-block: 1em;
  margin-inline: auto;
  width: clamp(33%, 20rem, 100%);
  border-block: 2px solid var(--keyBlack);
  text-align: center;
}
#chordPrompt {
  cursor: pointer;
  font-weight: bold;
  user-select: none;
}

.whiteKey, .blackKey {
  stroke: var(--bgColor);
  stroke-width: 2;
}
.whiteKey {
  fill: var(--keyWhite);
}
.blackKey {
  fill: var(--keyBlack);
}

.key[data-pressed="pos"] {
  fill: var(--posColor) !important;
}

.key[data-pressed="neg"] {
  fill: var(--negColor) !important;
}

.selections {
  display: inline-block;
  min-width: fit-content;
}

h2 {
  font-weight: normal;
  text-align: center;
  margin-block-start: 1em;
  margin-block-end: 0.5em;
}

kbd {
  font-weight: normal;
  background-color: hsl(0, 0%, 15%);
  border-radius: 0.25em;
  padding-inline: 0.25em;
  padding-block: 0.1em;
}

button {
  display: block;
  margin-inline: auto;
  background-color: var(--keyBlack);
  color: var(--infoColor);
  border: 1px solid var(--keyWhite);
  border-radius: 0.5em;
  padding-block: 0.3em;
  padding-inline: 0.5em;
}
#iButton {
  position: absolute;
  top: 9.5rem;
  left: 50%;
  translate: -50%;
  margin: 0;
  border-radius: 50%;
  font-family: serif;
  font-size: large;
  padding-block: 0;
  padding-inline: 0.25em;
}

dialog {
  position: fixed;
  margin: 0;
  top: 30%;
  left: 50%;
  width: clamp(15em, 60%, 35em);
  translate: -50% -50%;
  background-color: var(--bgColor);
  color: var(--infoColor);
  border: 1px solid var(--keyWhite);
  border-radius: 0.5em;
}
dialog::backdrop {
  background-color: hsla(0, 0%, 0%, 0.5);
}
body:has(dialog[open]) {
  filter: blur(3px);
}

#options {
  width: clamp(12rem, 90%, 35rem);
  padding-inline: 1em;
  margin-inline: auto;
  color: var(--infoColor);
  font-weight: lighter;
}

fieldset {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1em;
  margin-block: 1em;
  margin-inline: 0;
  padding: 0.5em;
  border: 1px solid var(--keyBlack);
  border-radius: 0.5em;
}
legend {
  font-weight: normal;
  text-align: center;
}

.option {
  white-space: nowrap;
}
.option > input {
  cursor: pointer;
}
.option > input[disabled] {
  cursor: not-allowed;
}

input[type="checkbox"] {
  margin-left: 0;
}

input[type="color" i] {
  appearance: none;
  font-size: inherit;
  inline-size: 1.75ex;
  block-size: 1.75ex;
  background-color: transparent;
  border: 1px solid var(--infoColor);
  border-radius: 5%;
  border-image: none;
  padding: 0;
}
input[type="color" i]::-webkit-color-swatch-wrapper {
  padding: 0;
  border-radius: 5%;
  background-color: transparent;
}
input[type="color" i]::-webkit-color-swatch,
input[type="color" i]::-moz-color-swatch {
  border-radius: 5%;
}

.posColor {
  color: var(--posColor);
}
.negColor {
  color: var(--negColor);
}

#lettersOptions{
  max-width: 20em;
  margin-inline: auto;
}
#accidentalsOptions {
  max-width: 17.5em;
  margin-inline: auto;
}